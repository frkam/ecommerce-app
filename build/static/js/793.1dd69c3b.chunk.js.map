{"version":3,"file":"static/js/793.1dd69c3b.chunk.js","mappings":"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","sources":["components/UI/button.tsx","components/UI/pageHero.tsx","pages/signUp/signUpForm.tsx","pages/signUp/signUp.tsx"],"sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\ntype Size = 'sm' | 'md' | 'lg'\n\nexport const Button: React.FC<{\n  children?: React.ReactNode\n  сlickHandler?: any\n  size?: Size\n  className?: string\n  type?: 'button' | 'submit'\n  disabled?: true | false\n  link?: true | false\n  linkTo?: string\n}> = ({\n  children,\n  сlickHandler,\n  size = 'sm',\n  className,\n  type,\n  disabled,\n  link = false,\n  linkTo,\n}) => {\n  const buttonClass = `bg-accent h-10 rounded w-[8.4rem] text-white ${\n    className ? className : ''\n  } ${disabled ? 'bg-disabled' : ''}`\n\n  if (link && linkTo) {\n    return (\n      <NavLink\n        to={linkTo}\n        className={`${buttonClass} flex items-center justify-center`}\n      >\n        {children}\n      </NavLink>\n    )\n  }\n\n  return (\n    <button\n      type={type}\n      onClick={сlickHandler}\n      className={buttonClass}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\ninterface IBreadCrumb {\n  link: string\n  title: string\n}\n\nexport const PageHero: React.FC<{\n  children: React.ReactNode\n  breadCrumbs?: IBreadCrumb[]\n}> = ({ children, breadCrumbs }) => {\n  return (\n    <div className=\"lg:h-[17.8rem] h-32 bg-primary xl:px-5\">\n      <div className=\"flex flex-col justify-center h-full max-w-8xl ml-2 tn:ml-5 xl:mx-auto\">\n        <h1 className=\"font-josefin-sans text-4xl text-text font-bold capitalize\">\n          {children}\n        </h1>\n        <div className=\"font-lato font-medium\">\n          <NavLink to=\"/\">Home</NavLink>\n          {breadCrumbs &&\n            breadCrumbs.map((breadCrumb, i, array) => {\n              return (\n                <NavLink\n                  key={breadCrumb.title}\n                  className={`ml-1 capitalize ${\n                    i + 1 === array.length ? 'text-accent' : ''\n                  }`}\n                  to={`/${breadCrumb.link}`}\n                >\n                  . {breadCrumb.title}\n                </NavLink>\n              )\n            })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { Button } from 'components/UI/button'\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\nimport { signUp } from 'services/firebase.service'\nimport { object, ref, string } from 'yup'\n\nconst validationSchema = object({\n  email: string().email('This must be an email').required('Email is required'),\n  password: string()\n    .min(8, 'Password is too short')\n    .required('Password is required'),\n  confirmPassword: string()\n    .oneOf([ref('password'), null], 'Passwords must match')\n    .required('Repeated password is required'),\n})\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n}\n\nconst inputClass = (touched?: boolean, error?: string) => {\n  if (!error && !touched) {\n    return 'input--ok'\n  }\n\n  if (error && touched) {\n    return 'input--error'\n  }\n\n  if (!error && touched) {\n    return 'input--successfull'\n  }\n}\n\nconst SignUpForm = () => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, { resetForm }) => {\n        signUp(values)\n        resetForm()\n      }}\n      validationSchema={validationSchema}\n      validateOnBlur\n    >\n      {(props) => {\n        const { errors, touched, isValid, dirty, values } = props\n        return (\n          <Form className=\"flex flex-col gap-2 w-full\">\n            <div className=\"input-error-container\">\n              <Field\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Your Email*\"\n                value={values.email}\n                className={`input ${inputClass(touched.email, errors.email)}`}\n                required\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"span\"\n                className=\"input-error-msg\"\n              />\n            </div>\n            <div className=\"input-error-container\">\n              <Field\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Your Password*\"\n                value={values.password}\n                className={`input ${inputClass(\n                  touched.password,\n                  errors.password\n                )}`}\n                required\n                type=\"password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"span\"\n                className=\"input-error-msg\"\n              />\n            </div>\n            <div className=\"input-error-container\">\n              <Field\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                placeholder=\"Repeat your password*\"\n                value={values.confirmPassword}\n                className={`input ${inputClass(\n                  touched.confirmPassword,\n                  errors.confirmPassword\n                )}`}\n                required\n                type=\"password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                name=\"confirmPassword\"\n                component=\"span\"\n                className=\"input-error-msg\"\n              />\n            </div>\n            <Button\n              className=\"mt-4 font-josefin-sans w-full\"\n              type=\"submit\"\n              disabled={!(dirty && isValid)}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n\nexport default SignUpForm\n","import { PageHero } from 'components/UI/pageHero'\nimport { Navigate, NavLink } from 'react-router-dom'\nimport SignUpForm from './signUpForm'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { auth } from 'firebase-config'\n\nconst SignUp = () => {\n  const [user] = useAuthState(auth)\n\n  if (user) {\n    return <Navigate to=\"/profile\" replace />\n  }\n\n  const breadCrumbs = [\n    {\n      title: 'sign up',\n      link: `/sign-up`,\n    },\n  ]\n\n  return (\n    <section>\n      <PageHero breadCrumbs={breadCrumbs}>Sign Up</PageHero>\n      <div className=\"flex justify-center main-container\">\n        <div className=\"flex flex-col items-center w-[34rem] tn:p-12 p-2 shadow-card\">\n          <h1 className=\"text-black font-josefin-sans text-[34px] font-bold\">\n            Sign Up\n          </h1>\n          <p className=\"font-lato text-[17px] text-text-sub-dark-500 pb-9\">\n            Please enter your data into form below\n          </p>\n          <SignUpForm />\n          <NavLink to=\"/login\" className=\"text-text-sub-dark-500 mt-7\">\n            Already have an account? Login\n          </NavLink>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default SignUp\n"],"names":["Button","children","сlickHandler","className","size","type","disabled","link","linkTo","buttonClass","to","onClick","PageHero","breadCrumbs","map","breadCrumb","i","array","length","title","validationSchema","object","email","string","required","password","min","confirmPassword","oneOf","ref","initialValues","inputClass","touched","error","onSubmit","values","resetForm","signUp","validateOnBlur","props","errors","isValid","dirty","id","name","placeholder","value","autoComplete","component","useAuthState","auth","replace"],"sourceRoot":""}