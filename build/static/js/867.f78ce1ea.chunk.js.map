{"version":3,"file":"static/js/867.f78ce1ea.chunk.js","mappings":"kLAKaA,EASR,SAAC,GASC,IARLC,EAQI,EARJA,SACAC,EAOI,EAPJA,kBAEAC,GAKI,EANJC,KAMI,EALJD,WACAE,EAII,EAJJA,KACAC,EAGI,EAHJA,SAGI,IAFJC,KAAAA,OAEI,SADJC,EACI,EADJA,OAEMC,EAAW,uDACfN,GAAwB,GADT,YAEbG,EAAW,cAAgB,IAE/B,OAAIC,GAEA,SAAC,KAAD,CACEG,GAAIF,EACJL,UAAS,UAAKM,EAAL,qCAFX,SAIGR,KAML,mBACEI,KAAMA,EACNM,QAAST,EACTC,UAAWM,EACXH,SAAUA,EAJZ,SAMGL,M,oFCtCMW,EAGR,SAAC,GAA+B,IAA7BX,EAA4B,EAA5BA,SAAUY,EAAkB,EAAlBA,YAChB,OACE,gBAAKV,UAAU,yCAAf,UACE,iBAAKA,UAAU,wEAAf,WACE,eAAIA,UAAU,4DAAd,SACGF,KAEH,iBAAKE,UAAU,wBAAf,WACE,SAAC,KAAD,CAASO,GAAG,IAAZ,kBACCG,GACCA,EAAYC,KAAI,SAACC,EAAYC,EAAGC,GAC9B,OACE,UAAC,KAAD,CAEEd,UAAS,0BACPa,EAAI,IAAMC,EAAMC,OAAS,cAAgB,IAE3CR,GAAE,WAAMK,EAAWR,MALrB,eAOKQ,EAAWI,QANTJ,EAAWI,oB,qMClB5BC,GAAuBC,EAAAA,EAAAA,IAAO,CAClCC,MAAMC,EAAAA,EAAAA,MACHC,SAAS,oBACTC,IAAI,EAAG,qBACPC,IAAI,GAAI,oBACXC,OAAOJ,EAAAA,EAAAA,MACJI,MAAM,yBACNH,SAAS,wBACZI,SAASL,EAAAA,EAAAA,MACNE,IAAI,GAAI,wBACRC,IAAI,IAAK,uBACTF,SAAS,uBACZK,SAASN,EAAAA,EAAAA,MACNE,IAAI,GAAI,wBACRD,SAAS,yBAGRM,EAAgB,CACpBR,KAAM,GACNK,MAAO,GACPC,QAAS,GACTC,QAAS,IAGEE,EAAc,WACzB,IAAMC,EAAa,SAACC,EAAmBC,GACrC,OAAKA,GAAUD,EAIXC,GAASD,EACJ,gBAGJC,GAASD,EACL,0BADT,EAPS,aAqBX,OACE,4BACE,eAAI9B,UAAU,iBAAd,2BACA,cAAGA,UAAU,sCAAb,yKAKA,SAAC,KAAD,CACE2B,cAAeA,EACfK,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,WAnBL,SAACC,GACrB,IAAMC,GAAUC,EAAAA,EAAAA,IAAgBF,EAAM,oBACtCG,EAAAA,GAAAA,QAAcF,EAAS,CACrBG,QAAS,gCACTC,QAAS,wBACTT,MAAO,6BAeHU,CAAcR,GACdC,KAEFQ,iBAAkBzB,EAClB0B,gBAAc,EAPhB,SASG,SAACC,GACA,IAAQC,EAA4CD,EAA5CC,OAAQf,EAAoCc,EAApCd,QAASgB,EAA2BF,EAA3BE,QAASC,EAAkBH,EAAlBG,MAAOd,EAAWW,EAAXX,OACzC,OACE,UAAC,KAAD,CAAMjC,UAAU,0BAAhB,WACE,iBAAKA,UAAU,+DAAf,WACE,iBAAKA,UAAU,wBAAf,WACE,SAAC,KAAD,CACEgD,GAAG,OACH7B,KAAK,OACL8B,YAAY,aACZC,MAAOjB,EAAOd,KACdnB,UAAS,gBAAW6B,EAAWC,EAAQX,KAAM0B,EAAO1B,OACpDE,UAAQ,KAEV,SAAC,KAAD,CACEF,KAAK,OACLgC,UAAU,OACVnD,UAAU,wBAGd,iBAAKA,UAAU,wBAAf,WACE,SAAC,KAAD,CACEgD,GAAG,QACH7B,KAAK,QACL8B,YAAY,cACZC,MAAOjB,EAAOT,MACdxB,UAAS,gBAAW6B,EAClBC,EAAQN,MACRqB,EAAOrB,QAETH,UAAQ,KAEV,SAAC,KAAD,CACEF,KAAK,QACLgC,UAAU,OACVnD,UAAU,2BAIhB,4BACE,iBAAKA,UAAU,wBAAf,WACE,SAAC,KAAD,CACEgD,GAAG,UACH7B,KAAK,UACL8B,YAAY,WACZC,MAAOjB,EAAOR,QACdzB,UAAS,gBAAW6B,EAClBC,EAAQL,QACRoB,EAAOpB,UAETJ,UAAQ,KAEV,SAAC,KAAD,CACEF,KAAK,UACLgC,UAAU,OACVnD,UAAU,wBAGd,iBAAKA,UAAU,6BAAf,WACE,SAAC,KAAD,CACEgD,GAAG,UACHI,GAAG,WACHjC,KAAK,UACL8B,YAAY,qBACZ5B,UAAQ,EACR6B,MAAOjB,EAAOP,QACd1B,UAAS,2BAAsB6B,EAC7BC,EAAQJ,QACRmB,EAAOnB,aAGX,SAAC,KAAD,CACEP,KAAK,UACLgC,UAAU,OACVnD,UAAU,2BAIhB,SAAC,IAAD,CACEA,UAAU,yBACVE,KAAK,SACLC,WAAY4C,GAASD,GAHvB,iCC5Ed,EArEgB,WACd,OACE,4BACE,SAAC,IAAD,CAAUpC,YAAa,CAAC,CAAEM,MAAO,UAAWZ,KAAK,YAAjD,yBAGA,qBAASJ,UAAU,+BAAnB,WACE,iBAAKA,UAAU,gFAAf,WACE,iBAAKA,UAAU,8BAAf,WACE,eAAIA,UAAU,iBAAd,mCACA,cAAGA,UAAU,oBAAb,mPAMA,iBAAKA,UAAU,yBAAf,WACE,gBAAKA,UAAU,8CACf,gBAAKA,UAAU,4CACf,gBAAKA,UAAU,uDAGnB,iBAAKA,UAAU,kEAAf,WACE,eAAIA,UAAU,iBAAd,0BACA,iBAAKA,UAAU,4HAAf,WACE,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,gFACf,iBAAKA,UAAU,gBAAf,WACE,cAAGA,UAAU,qBAAqBqD,KAAK,mBAAvC,gCAGA,cAAGrD,UAAU,qBAAqBqD,KAAK,uBAAvC,2CAKJ,iBAAKrD,UAAU,OAAf,WACE,gBAAKA,UAAU,8EACf,iBAAKA,UAAU,gBAAf,WACE,cAAGA,UAAU,eAAb,4BACA,cAAGA,UAAU,eAAb,kCAGJ,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,gFACf,iBAAKA,UAAU,gBAAf,WACE,cAAGA,UAAU,eAAb,qCACA,cAAGA,UAAU,eAAb,4CAGJ,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,+EACf,iBAAKA,UAAU,gBAAf,WACE,cAAGA,UAAU,eAAb,qCACA,cAAGA,UAAU,eAAb,4CAMV,iBAAKA,UAAU,4DAAf,WACE,SAAC4B,EAAD,KACA,gBAAK0B,IAAKC,EAAaC,IAAI,cAAcxD,UAAU,8B,uLCtDhDyD,EAAM,mCAAG,WAAOC,GAAP,2FAEZC,EAAAA,EAAAA,IAA+BC,EAAAA,EAAMF,EAAKlC,MAAOkC,EAAKG,UAF1C,OAIlBC,EAAO,CAAEtC,MAAOkC,EAAKlC,MAAOqC,SAAUH,EAAKG,WAJzB,+CAMI,iDAAlB,KAAMnC,SACRY,EAAAA,GAAAA,MAAY,6BAA8B,CACxCyB,SAAU,cACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAbG,wDAAH,sDAmBNN,EAAM,mCAAG,WAAOJ,GAAP,iGAEAW,EAAAA,EAAAA,IAChBT,EAAAA,EACAF,EAAKlC,MACLkC,EAAKG,UALW,cAEZS,EAFY,yBAQXA,EAAIZ,MARO,mCAUI,2CAAlB,KAAMhC,QAVQ,uBAWhBY,EAAAA,GAAAA,MAAY,6BAA8B,CACxCyB,SAAU,cACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAEP,IAAIG,MAAM,KAAM7C,SAnBN,WAqBI,2CAAlB,KAAMA,QArBQ,uBAsBhBY,EAAAA,GAAAA,MAAY,yCAA0C,CACpDyB,SAAU,cACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAEP,IAAIG,MAAM,KAAM7C,SA9BN,yDAAH,sDAqCNW,EAAe,mCAAG,WAAOF,EAAcqC,GAArB,iGAETC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAWC,EAAAA,GAAD,UAAQH,KAAnB,UACnBrC,IAHsB,cAErBmC,EAFqB,yBAKpBA,GALoB,yDAOpBM,QAAQC,OAAO,IAAIN,MAAJ,QAPK,yDAAH","sources":["components/UI/button.tsx","components/UI/pageHero.tsx","pages/contact/contactForm.tsx","pages/contact/contact.tsx","services/firebase.service.ts"],"sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\ntype Size = 'sm' | 'md' | 'lg'\n\nexport const Button: React.FC<{\n  children?: React.ReactNode\n  сlickHandler?: (e: React.MouseEvent<HTMLButtonElement>) => void\n  size?: Size\n  className?: string\n  type?: 'button' | 'submit'\n  disabled?: true | false\n  link?: true | false\n  linkTo?: string\n}> = ({\n  children,\n  сlickHandler,\n  size = 'sm',\n  className,\n  type,\n  disabled,\n  link = false,\n  linkTo,\n}) => {\n  const buttonClass = `bg-accent h-10 rounded w-[8.4rem] text-white ${\n    className ? className : ''\n  } ${disabled ? 'bg-disabled' : ''}`\n\n  if (link) {\n    return (\n      <NavLink\n        to={linkTo!}\n        className={`${buttonClass} flex items-center justify-center`}\n      >\n        {children}\n      </NavLink>\n    )\n  }\n\n  return (\n    <button\n      type={type}\n      onClick={сlickHandler}\n      className={buttonClass}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\ninterface IBreadCrumb {\n  link: string\n  title: string\n}\n\nexport const PageHero: React.FC<{\n  children: React.ReactNode\n  breadCrumbs?: IBreadCrumb[]\n}> = ({ children, breadCrumbs }) => {\n  return (\n    <div className=\"lg:h-[17.8rem] h-32 bg-primary xl:px-5\">\n      <div className=\"flex flex-col justify-center h-full max-w-8xl ml-2 tn:ml-5 xl:mx-auto\">\n        <h1 className=\"font-josefin-sans text-4xl text-text font-bold capitalize\">\n          {children}\n        </h1>\n        <div className=\"font-lato font-medium\">\n          <NavLink to=\"/\">Home</NavLink>\n          {breadCrumbs &&\n            breadCrumbs.map((breadCrumb, i, array) => {\n              return (\n                <NavLink\n                  key={breadCrumb.title}\n                  className={`ml-1 capitalize ${\n                    i + 1 === array.length ? 'text-accent' : ''\n                  }`}\n                  to={`/${breadCrumb.link}`}\n                >\n                  . {breadCrumb.title}\n                </NavLink>\n              )\n            })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { Button } from 'components/UI/button'\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\nimport { toast } from 'react-toastify'\nimport { object, string } from 'yup'\nimport { addDocFirestore } from '../../services/firebase.service'\n\nconst supportMessageSchema = object({\n  name: string()\n    .required('Name is required')\n    .min(3, 'Name is too short')\n    .max(30, 'Name is too long'),\n  email: string()\n    .email('This must be an email')\n    .required('Password is required'),\n  subject: string()\n    .min(12, 'Subject is too short')\n    .max(200, 'Subject is too long')\n    .required('Subject is required'),\n  message: string()\n    .min(25, 'Message is too short')\n    .required('Message is required'),\n})\n\nconst initialValues = {\n  name: '',\n  email: '',\n  subject: '',\n  message: '',\n}\n\nexport const ContactForm = () => {\n  const inputClass = (touched?: boolean, error?: string) => {\n    if (!error && !touched) {\n      return 'input--ok'\n    }\n\n    if (error && touched) {\n      return 'input--error'\n    }\n\n    if (!error && touched) {\n      return 'input--successfull'\n    }\n  }\n\n  const submitHandler = (data: object) => {\n    const promise = addDocFirestore(data, 'support-messages')\n    toast.promise(promise, {\n      pending: 'Your message is being sent...',\n      success: 'Your message was sent',\n      error: \"Your message wasn't sent\",\n    })\n  }\n\n  return (\n    <div>\n      <h1 className=\"contact-header\">Get In Touch</h1>\n      <p className=\"max-w-[34.375rem] contact-text mt-5\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mattis neque\n        ultrices tristique amet erat vitae eget dolor los vitae lobortis quis\n        bibendum quam.\n      </p>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, { resetForm }) => {\n          submitHandler(values)\n          resetForm()\n        }}\n        validationSchema={supportMessageSchema}\n        validateOnBlur\n      >\n        {(props) => {\n          const { errors, touched, isValid, dirty, values } = props\n          return (\n            <Form className=\"mt-10 max-w-[34.375rem]\">\n              <div className=\"mb-5 flex tn:flex-row flex-col gap-y-5 tn:gap-y-0 tn:gap-x-6\">\n                <div className=\"input-error-container\">\n                  <Field\n                    id=\"name\"\n                    name=\"name\"\n                    placeholder=\"Your Name*\"\n                    value={values.name}\n                    className={`input ${inputClass(touched.name, errors.name)}`}\n                    required\n                  />\n                  <ErrorMessage\n                    name=\"name\"\n                    component=\"span\"\n                    className=\"input-error-msg\"\n                  />\n                </div>\n                <div className=\"input-error-container\">\n                  <Field\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Your Email*\"\n                    value={values.email}\n                    className={`input ${inputClass(\n                      touched.email,\n                      errors.email\n                    )}`}\n                    required\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"span\"\n                    className=\"input-error-msg\"\n                  />\n                </div>\n              </div>\n              <div>\n                <div className=\"input-error-container\">\n                  <Field\n                    id=\"subject\"\n                    name=\"subject\"\n                    placeholder=\"Subject*\"\n                    value={values.subject}\n                    className={`input ${inputClass(\n                      touched.subject,\n                      errors.subject\n                    )}`}\n                    required\n                  />\n                  <ErrorMessage\n                    name=\"subject\"\n                    component=\"span\"\n                    className=\"input-error-msg\"\n                  />\n                </div>\n                <div className=\"input-error-container mt-5\">\n                  <Field\n                    id=\"message\"\n                    as=\"textarea\"\n                    name=\"message\"\n                    placeholder=\"Type Your Message*\"\n                    required\n                    value={values.message}\n                    className={`contact-textarea ${inputClass(\n                      touched.message,\n                      errors.message\n                    )}`}\n                  />\n                  <ErrorMessage\n                    name=\"message\"\n                    component=\"span\"\n                    className=\"input-error-msg\"\n                  />\n                </div>\n              </div>\n              <Button\n                className=\"mt-4 font-josefin-sans\"\n                type=\"submit\"\n                disabled={!(dirty && isValid)}\n              >\n                Send Mail\n              </Button>\n            </Form>\n          )\n        }}\n      </Formik>\n    </div>\n  )\n}\n","import { PageHero } from 'components/UI/pageHero'\nimport contact_img from '../../images/contact_help.png'\nimport { ContactForm } from './contactForm'\n\nconst Contact = () => {\n  return (\n    <div>\n      <PageHero breadCrumbs={[{ title: 'contact', link: `contact` }]}>\n        Contact Us\n      </PageHero>\n      <section className=\"main-container flex flex-col\">\n        <div className=\"flex sm:flex-row flex-col gap-x-14 xl:gap-x-28 mb-[7.5rem] xl:gap-y-0 gap-y-9\">\n          <div className=\"xl:max-w-[34.375rem] flex-1\">\n            <h1 className=\"contact-header\">Information About us</h1>\n            <p className=\"contact-text mt-3\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mattis\n              neque ultrices mattis aliquam, malesuada diam est. Malesuada sem\n              tristique amet erat vitae eget dolor lobortis. Accumsan faucibus\n              vitae lobortis quis bibendum quam.\n            </p>\n            <div className=\"flex mt-[70px] gap-x-3\">\n              <div className=\"contact-color-sm bg-color-circles-violet\" />\n              <div className=\"contact-color-sm bg-color-circles-pink\" />\n              <div className=\"contact-color-sm bg-color-circles-turquoise\" />\n            </div>\n          </div>\n          <div className=\"flex-1 flex flex-col lg:items-start md:items-center items-start\">\n            <h1 className=\"contact-header\">Contact Way</h1>\n            <div className=\"grid lg:grid-cols-2 lg:grid-rows-2 sm:grid-cols-1 tn:grid-cols-2 tn:grid-rows-2 grid-cols-1 gap-3 sm:gap-6 xl:gap-12 mt-7\">\n              <div className=\"flex\">\n                <div className=\"tn1:contact-color-lg contact-color-sm bg-color-circles-violet mt-3 md:mt-0\" />\n                <div className=\"tn1:ml-4 ml-2\">\n                  <a className=\"contact-text block\" href=\"tel:877-67-88-99\">\n                    Tel: 877-67-88-99\n                  </a>\n                  <a className=\"contact-text block\" href=\"email:shop@store.com\">\n                    E-Mail: shop@store.com\n                  </a>\n                </div>\n              </div>\n              <div className=\"flex\">\n                <div className=\"tn1:contact-color-lg contact-color-sm bg-color-circles-pink mt-3 md:mt-0\" />\n                <div className=\"tn1:ml-4 ml-2\">\n                  <p className=\"contact-text\">Support Forum</p>\n                  <p className=\"contact-text\">For over 24hr</p>\n                </div>\n              </div>\n              <div className=\"flex\">\n                <div className=\"tn1:contact-color-lg contact-color-sm bg-color-circles-orange mt-3 md:mt-0\" />\n                <div className=\"tn1:ml-4 ml-2\">\n                  <p className=\"contact-text\">20 Margaret st, London</p>\n                  <p className=\"contact-text\">Great britain, 3NM98-LK</p>\n                </div>\n              </div>\n              <div className=\"flex\">\n                <div className=\"tn1:contact-color-lg contact-color-sm bg-color-circles-green mt-3 md:mt-0\" />\n                <div className=\"tn1:ml-4 ml-2\">\n                  <p className=\"contact-text\">Free standard shipping</p>\n                  <p className=\"contact-text\">on all orders.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex md:flex-row flex-col lg:gap-y-0 gap-y-4 items-center\">\n          <ContactForm />\n          <img src={contact_img} alt=\"contact_img\" className=\"md:max-w-[50%]\" />\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Contact\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from 'firebase/auth'\nimport { addDoc, collection } from 'firebase/firestore'\nimport { auth, db } from 'firebase-config'\nimport { toast } from 'react-toastify'\nimport { ISignIn, ISignUp } from 'types/auth.types'\n\n// Authentication\n\nexport const signUp = async (user: ISignUp) => {\n  try {\n    await createUserWithEmailAndPassword(auth, user.email, user.password)\n\n    signIn({ email: user.email, password: user.password })\n  } catch (error: any) {\n    if (error.message === 'Firebase: Error (auth/email-already-in-use).') {\n      toast.error('This email is already used', {\n        position: 'bottom-left',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      })\n    }\n  }\n}\n\nexport const signIn = async (user: ISignIn) => {\n  try {\n    const res = await signInWithEmailAndPassword(\n      auth,\n      user.email,\n      user.password\n    )\n\n    return res.user\n  } catch (error: any) {\n    if (error.message === 'Firebase: Error (auth/wrong-password).') {\n      toast.error('You entered wrong password', {\n        position: 'bottom-left',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      })\n      throw new Error(error.message)\n    }\n    if (error.message === 'Firebase: Error (auth/user-not-found).') {\n      toast.error('The user with this email was not found', {\n        position: 'bottom-left',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      })\n      throw new Error(error.message)\n    }\n  }\n}\n\n// Database\n\nexport const addDocFirestore = async (data: object, collectionName: string) => {\n  try {\n    const res = await addDoc(collection(db, `${collectionName}`), {\n      ...data,\n    })\n    return res\n  } catch (error: any) {\n    return Promise.reject(new Error(error))\n  }\n}\n"],"names":["Button","children","сlickHandler","className","size","type","disabled","link","linkTo","buttonClass","to","onClick","PageHero","breadCrumbs","map","breadCrumb","i","array","length","title","supportMessageSchema","object","name","string","required","min","max","email","subject","message","initialValues","ContactForm","inputClass","touched","error","onSubmit","values","resetForm","data","promise","addDocFirestore","toast","pending","success","submitHandler","validationSchema","validateOnBlur","props","errors","isValid","dirty","id","placeholder","value","component","as","href","src","contact_img","alt","signUp","user","createUserWithEmailAndPassword","auth","password","signIn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","signInWithEmailAndPassword","res","Error","collectionName","addDoc","collection","db","Promise","reject"],"sourceRoot":""}