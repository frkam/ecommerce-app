{"version":3,"file":"static/js/341.e5484429.chunk.js","mappings":"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","sources":["components/UI/button.tsx","components/UI/pageHero.tsx","pages/notFound.tsx","../node_modules/nanoid/index.browser.js","pages/shop/ratingStars.tsx","pages/shop/shop.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype size = \"sm\" | \"md\" | \"lg\";\r\n\r\nexport const Button: React.FC<{\r\n  children?: React.ReactNode;\r\n  сlickHandler?: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  size?: size;\r\n  className?: string;\r\n  type?: \"button\" | \"submit\";\r\n  disabled?: true | false;\r\n  link?: true | false;\r\n  linkTo?: string;\r\n}> = ({\r\n  children,\r\n  сlickHandler,\r\n  size = \"sm\",\r\n  className,\r\n  type,\r\n  disabled,\r\n  link = false,\r\n  linkTo,\r\n}) => {\r\n  const buttonClass = `bg-accent h-10 rounded w-[8.4rem] text-white  ${\r\n    className ? className : \"\"\r\n  } ${disabled ? \"bg-disabled\" : \"\"}`;\r\n\r\n  if (link) {\r\n    return (\r\n      <NavLink\r\n        to={linkTo!}\r\n        className={`${buttonClass} flex items-center justify-center`}\r\n      >\r\n        {children}\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={сlickHandler}\r\n      className={buttonClass}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const PageHero: React.FC<{\r\n  children: React.ReactNode;\r\n  link?: string;\r\n}> = ({ children, link }) => {\r\n  return (\r\n    <div className=\"lg:h-[17.8rem] h-32 bg-primary xl:px-5\">\r\n      <div className=\"flex flex-col justify-center h-full max-w-8xl ml-2 tn:ml-5 xl:mx-auto\">\r\n        <h1 className=\"font-josefin-sans text-4xl text-text font-bold capitalize\">\r\n          {children}\r\n        </h1>\r\n        <div className=\"font-lato font-medium\">\r\n          <NavLink to=\"/\">Home</NavLink>\r\n          <NavLink className=\"text-accent ml-1 capitalize\" to={`/${link}`}>\r\n            . {children}\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Button } from \"components/UI/button\";\r\nimport { PageHero } from \"components/UI/pageHero\";\r\nimport notFoundImg from \"images/404.png\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <section>\r\n      <PageHero>Not Found</PageHero>\r\n      <div className=\"main-container flex flex-col items-center\">\r\n        <img alt=\"The page you requested was not found\" src={notFoundImg} />\r\n        <Button className=\"font-josefin-sans\" link={true} linkTo=\"/\">\r\n          Back to home\r\n        </Button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React from \"react\";\r\nimport { IoIosStar, IoIosStarHalf, IoIosStarOutline } from \"react-icons/io\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport const RatingStars: React.FC<{ rating: number }> = ({ rating }) => {\r\n  let hundreds = +(rating - +Math.floor(rating)).toFixed(2);\r\n\r\n  if (hundreds > 0.5) {\r\n    hundreds = 1;\r\n  } else if (hundreds < 0.5) {\r\n    hundreds = 0;\r\n  } else {\r\n    hundreds = 0.5;\r\n  }\r\n\r\n  let starsCount = Math.floor(rating) + hundreds;\r\n\r\n  const stars = [];\r\n  for (let i = 0; i < 5; i++) {\r\n    if (starsCount >= 1) {\r\n      stars.push(<IoIosStar className=\"text-stars-filled\" />);\r\n      starsCount -= 1;\r\n    } else if (starsCount === 0.5) {\r\n      stars.push(<IoIosStarHalf className=\"text-stars-filled\" />);\r\n      starsCount -= 0.5;\r\n    } else {\r\n      stars.push(<IoIosStarOutline className=\"text-stars-outlined\" />);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {stars.map((star) => {\r\n        return <React.Fragment key={nanoid()}>{star}</React.Fragment>;\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { PageHero } from \"components/UI/pageHero\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"store/store\";\r\nimport { getProductsByCategoryName } from \"store/slices/productsSlice\";\r\nimport { IProduct } from \"types/products.types\";\r\nimport NotFound from \"pages/notFound\";\r\nimport { RatingStars } from \"./ratingStars\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Shop = () => {\r\n  const { category } = useParams();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductsByCategoryName(category!));\r\n  }, []);\r\n\r\n  const { products, isLoading } = useAppSelector((state) => state.products);\r\n\r\n  const categoryTitle = category?.replaceAll(\"-\", \" \");\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <div>Loading....</div>}\r\n      {!isLoading && products.products.length === 0 && <NotFound></NotFound>}\r\n      {!isLoading && products.products.length > 0 && (\r\n        <section>\r\n          <PageHero link={`shop/${category}`}>{categoryTitle}</PageHero>\r\n          <div className=\"main-container flex flex-col gap-y-[1.75rem]\">\r\n            {products?.products.map((product: IProduct) => {\r\n              const priceWithDiscount = (\r\n                product.price -\r\n                product.price * product.discountPercentage * 0.01\r\n              ).toFixed(2);\r\n\r\n              return (\r\n                <div key={nanoid()} className=\"flex shadow-card p-4\">\r\n                  <img\r\n                    src={product.thumbnail}\r\n                    alt={product.title}\r\n                    className=\"sm:w-72 sm:h-48 w-48 h-24 mr-7 rounded-sm\"\r\n                  />\r\n                  <div>\r\n                    <NavLink to={product.id.toString()}>\r\n                      <h3 className=\"text-text font-josefin-sans text-lg font-bold\">\r\n                        {product.title}\r\n                      </h3>\r\n                      <p className=\"font-lato text-text-sub-dark-700 mb-2\">\r\n                        {product.description}\r\n                      </p>\r\n                    </NavLink>\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"font-josefin-sans pr-4\">\r\n                        <span className=\"text-text pr-2\">\r\n                          {priceWithDiscount}$\r\n                        </span>\r\n                        <span className=\"line-through text-accent\">\r\n                          {product.price}$\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"flex\">\r\n                        <RatingStars rating={product.rating}></RatingStars>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n"],"names":["Button","children","сlickHandler","className","size","type","disabled","link","linkTo","buttonClass","to","onClick","PageHero","alt","src","notFoundImg","nanoid","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","RatingStars","rating","hundreds","Math","floor","toFixed","starsCount","stars","i","push","map","star","category","useParams","dispatch","useAppDispatch","useEffect","getProductsByCategoryName","useAppSelector","state","products","isLoading","categoryTitle","replaceAll","length","product","priceWithDiscount","price","discountPercentage","thumbnail","title","description"],"sourceRoot":""}