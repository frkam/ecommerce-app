{"version":3,"file":"static/js/341.4af82deb.chunk.js","mappings":"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","sources":["components/UI/button.tsx","components/UI/pageHero.tsx","components/UI/ratingStars.tsx","components/UI/slider.tsx","pages/notFound.tsx","pages/product/product.tsx"],"sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\ntype Size = 'sm' | 'md' | 'lg'\n\nexport const Button: React.FC<{\n  children?: React.ReactNode\n  сlickHandler?: (e: React.MouseEvent<HTMLButtonElement>) => void\n  size?: Size\n  className?: string\n  type?: 'button' | 'submit'\n  disabled?: true | false\n  link?: true | false\n  linkTo?: string\n}> = ({\n  children,\n  сlickHandler,\n  size = 'sm',\n  className,\n  type,\n  disabled,\n  link = false,\n  linkTo,\n}) => {\n  const buttonClass = `bg-accent h-10 rounded w-[8.4rem] text-white  ${\n    className ? className : ''\n  } ${disabled ? 'bg-disabled' : ''}`\n\n  if (link) {\n    return (\n      <NavLink\n        to={linkTo!}\n        className={`${buttonClass} flex items-center justify-center`}\n      >\n        {children}\n      </NavLink>\n    )\n  }\n\n  return (\n    <button\n      type={type}\n      onClick={сlickHandler}\n      className={buttonClass}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\ninterface IBreadCrumb {\n  link: string\n  title: string\n}\n\nexport const PageHero: React.FC<{\n  children: React.ReactNode\n  breadCrumbs?: IBreadCrumb[]\n}> = ({ children, breadCrumbs }) => {\n  return (\n    <div className=\"lg:h-[17.8rem] h-32 bg-primary xl:px-5\">\n      <div className=\"flex flex-col justify-center h-full max-w-8xl ml-2 tn:ml-5 xl:mx-auto\">\n        <h1 className=\"font-josefin-sans text-4xl text-text font-bold capitalize\">\n          {children}\n        </h1>\n        <div className=\"font-lato font-medium\">\n          <NavLink to=\"/\">Home</NavLink>\n          {breadCrumbs &&\n            breadCrumbs.map((breadCrumb, i, array) => {\n              return (\n                <NavLink\n                  key={breadCrumb.title}\n                  className={`ml-1 capitalize ${\n                    i + 1 === array.length ? 'text-accent' : ''\n                  }`}\n                  to={`/${breadCrumb.link}`}\n                >\n                  . {breadCrumb.title}\n                </NavLink>\n              )\n            })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { IoIosStar, IoIosStarHalf, IoIosStarOutline } from 'react-icons/io'\n\nexport const RatingStars: React.FC<{ rating: number }> = ({ rating }) => {\n  let hundreds = Number((rating - Number(Math.floor(rating))).toFixed(2))\n\n  if (hundreds > 0.5) {\n    hundreds = 1\n  } else if (hundreds < 0.5) {\n    hundreds = 0\n  } else {\n    hundreds = 0.5\n  }\n\n  let starsCount = Math.floor(rating) + hundreds\n\n  const stars = []\n  for (let i = 0; i < 5; i++) {\n    if (starsCount >= 1) {\n      stars.push(<IoIosStar className=\"text-stars-filled\" />)\n      starsCount -= 1\n    } else if (starsCount === 0.5) {\n      stars.push(<IoIosStarHalf className=\"text-stars-filled\" />)\n      starsCount -= 0.5\n    } else {\n      stars.push(<IoIosStarOutline className=\"text-stars-outlined\" />)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {stars.map((star, i) => {\n        return <React.Fragment key={i}>{star}</React.Fragment>\n      })}\n    </React.Fragment>\n  )\n}\n","import { useWindowWidth } from 'hooks/useWindowWidth'\nimport { Navigation } from 'swiper'\n// eslint-disable-next-line import/no-unresolved\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nexport const Slider: React.FC<{\n  images: string[]\n  imageStyle?: string\n  slideStyle?: string\n  swiperStyle?: string\n  maxSlides: number\n}> = ({ images, imageStyle, slideStyle, swiperStyle, maxSlides }) => {\n  const width = useWindowWidth()\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const slidesPerViewConfig = (width: number) => {\n    if (width > 1024) {\n      return maxSlides\n    }\n    if (width < 1024 && width > 500) {\n      return 2\n    }\n    return 1\n  }\n\n  return (\n    <Swiper\n      slidesPerView={slidesPerViewConfig(width)}\n      modules={[Navigation]}\n      navigation\n      className={`w-full select-none ${swiperStyle}`}\n    >\n      {images.map((image) => {\n        return (\n          <SwiperSlide key={image} className={`h-full ${slideStyle}`}>\n            <img src={image} alt=\"productImage\" className={imageStyle} />\n          </SwiperSlide>\n        )\n      })}\n    </Swiper>\n  )\n}\n","import { Button } from 'components/UI/button'\nimport { PageHero } from 'components/UI/pageHero'\nimport notFoundImg from 'images/404.png'\n\nconst NotFound = () => {\n  return (\n    <section>\n      <PageHero>Not Found</PageHero>\n      <div className=\"main-container flex flex-col items-center\">\n        <img alt=\"The page you requested was not found\" src={notFoundImg} />\n        <Button className=\"font-josefin-sans\" link={true} linkTo=\"/\">\n          Back to home\n        </Button>\n      </div>\n    </section>\n  )\n}\n\nexport default NotFound\n","import { PageHero } from 'components/UI/pageHero'\nimport { RatingStars } from 'components/UI/ratingStars'\nimport { Slider } from 'components/UI/slider'\nimport NotFound from 'pages/notFound'\nimport { useEffect } from 'react'\nimport { BsHeart } from 'react-icons/bs'\nimport { useMatch } from 'react-router'\nimport { NavLink } from 'react-router-dom'\nimport { getProductsByCategoryName } from 'store/slices/productsSlice'\nimport { useAppDispatch, useAppSelector } from 'store/store'\nimport { IProduct } from 'types/products.types'\n\nconst Product = () => {\n  const urlParams = useMatch('/categories/:category/:productId')!.params\n  const dispatch = useAppDispatch()\n\n  const { products, isLoading } = useAppSelector((state) => state.products)\n\n  useEffect(() => {\n    if (products.products.length === 0) {\n      dispatch(getProductsByCategoryName(urlParams.category!))\n    }\n  }, [dispatch, products.products.length, urlParams.category])\n\n  const mainProductData = products.products.filter(\n    (item) => item.id === Number(urlParams.productId!)\n  )\n\n  const relatedProductsData = products.products.filter(\n    (item) => item.id !== Number(urlParams.productId!)\n  )\n\n  const productData = mainProductData[0]\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const priceWithDiscount = (productData: IProduct) => {\n    const price = (\n      productData.price -\n      productData.price * productData.discountPercentage * 0.01\n    ).toFixed(2)\n    return price\n  }\n\n  return (\n    <div>\n      <section>\n        {isLoading && <>Loading...</>}\n        {!isLoading && mainProductData.length === 0 && <NotFound />}\n        {!isLoading && productData && (\n          <>\n            <PageHero\n              breadCrumbs={[\n                {\n                  title: 'categories',\n                  link: `categories`,\n                },\n                {\n                  title: productData.category.replaceAll('-', ' '),\n                  link: `categories/${productData.category}`,\n                },\n                {\n                  title: productData.title,\n                  link: `categories/${urlParams.category}/${urlParams.productId}`,\n                },\n              ]}\n            >\n              {productData.title}\n            </PageHero>\n            <div className=\"main-container flex flex-col gap-y-[1.75rem]\">\n              <div className=\"shadow-card w-[73.125rem] h-[31.8rem] flex rounded-sm gap-11 items-center p-3\">\n                <div className=\"w-[34.3rem] h-full flex flex-col justify-center\">\n                  <img\n                    src={productData.thumbnail}\n                    alt={productData.title}\n                    className=\"w-full h-full\"\n                  />\n                  {productData.images.length > 2 && (\n                    <Slider\n                      images={productData.images}\n                      imageStyle=\"w-full h-32\"\n                      maxSlides={3}\n                    />\n                  )}\n                </div>\n                <div className=\"w\">\n                  <h1 className=\"contact-header capitalize\">\n                    {productData.title}\n                  </h1>\n                  <div className=\"flex my-2\">\n                    <RatingStars rating={productData.rating} />\n                    <span className=\"text-text font-josefin-sans text-sm ml-1\">\n                      ({productData.rating})\n                    </span>\n                  </div>\n                  <div className=\"flex gap-4\">\n                    <span className=\"price\">\n                      {priceWithDiscount(productData)}$\n                    </span>\n                    <span className=\"price-without-discount\">\n                      {productData.price}$\n                    </span>\n                  </div>\n                  <p className=\"text-text-sub-dark-500 font-josefin-sans my-3\">\n                    {productData.description}\n                  </p>\n                  <div className=\"flex gap-5 items-center ml-14\">\n                    <button className=\"text-text font-josefin-sans\">\n                      Add to cart\n                    </button>\n                    <button>\n                      <BsHeart />\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"\">\n                <h2 className=\"contact-header mb-12\">Related Products</h2>\n                <div className=\"flex gap-6\">\n                  {relatedProductsData.map((product) => {\n                    return (\n                      <div key={product.id}>\n                        <NavLink\n                          to={`/categories/${urlParams.category}/${product.id}`}\n                        >\n                          <img\n                            src={product.thumbnail}\n                            alt={product.title}\n                            className=\"h-full\"\n                          />\n                        </NavLink>\n                        <div className=\"flex items-center justify-between\">\n                          <NavLink\n                            to={`/categories/${urlParams.category}/${product.id}`}\n                          >\n                            {product.title}\n                          </NavLink>\n                          <span className=\"flex\">\n                            <RatingStars rating={product.rating} />\n                          </span>\n                        </div>\n                        <span className=\"price\">\n                          {priceWithDiscount(product)}$\n                        </span>\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </section>\n    </div>\n  )\n}\n\nexport default Product\n"],"names":["Button","children","сlickHandler","className","size","type","disabled","link","linkTo","buttonClass","to","onClick","PageHero","breadCrumbs","map","breadCrumb","i","array","length","title","RatingStars","rating","hundreds","Number","Math","floor","toFixed","starsCount","stars","push","star","Slider","images","imageStyle","slideStyle","swiperStyle","maxSlides","width","useWindowWidth","slidesPerView","slidesPerViewConfig","modules","Navigation","navigation","image","src","alt","notFoundImg","urlParams","useMatch","params","dispatch","useAppDispatch","useAppSelector","state","products","isLoading","useEffect","getProductsByCategoryName","category","mainProductData","filter","item","id","productId","relatedProductsData","productData","priceWithDiscount","price","discountPercentage","replaceAll","thumbnail","description","product"],"sourceRoot":""}